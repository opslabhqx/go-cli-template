---
name: Build and Push Docker Images for Go-Cli

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  docker-build-go-cli:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_SECRET }}

      - name: Extract version from Dockerfile
        id: extract_version
        run: |
          ALPINE_VERSION=$(grep -oP '^ARG ALPINE_VERSION=\K.*' Dockerfile)
          echo "ALPINE_VERSION=${ALPINE_VERSION}" >> $GITHUB_ENV
          echo "ALPINE_VERSION=${ALPINE_VERSION}"
          GO_VERSION=$(grep -oP "^ARG GO_VERSION=\K.*" Dockerfile)
          echo "GO_VERSION=${GO_VERSION}" >> $GITHUB_ENV
          echo "GO_VERSION=${GO_VERSION}"

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ github.workspace }}
          file: ${{ github.workspace }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ env.GO_VERSION }}-alpine${{ env.ALPINE_VERSION }}
            ghcr.io/${{ github.repository }}:${{ env.GO_VERSION }}
            ghcr.io/${{ github.repository }}:alpine${{ env.ALPINE_VERSION }}
            ghcr.io/${{ github.repository }}:latest

      - name: Run Slack Notification
        if: always()
        uses: opslabhqx/action-slacknotify@v1
        with:
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
